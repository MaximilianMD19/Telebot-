import random
import urllib.parse
import bs4
import requests
import telebot
from telebot import types
import SECRET
from io import BytesIO

import B_J
import BotGames
from menuBot import Menu

bot = telebot.TeleBot(SECRET.TGBot)  # –ü–æ–ª—É–Ω–æ–≤—Å–∫–∏–π –ú–∞–∫—Å–∏–º–∏–ª–∏–∞–Ω 1-–ú–î-19
game21 = None
game_B_J = None
game_words = None

# /start
@bot.message_handler(commands="start")
def command(message, res=False):
    txt_message = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—É—Ä—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ Python"
    bot.send_message(message.chat.id, text=txt_message, reply_markup=Menu.getMenu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é").markup)
# -----

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —é–∑–µ—Ä–∞
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global game21
    global game_B_J
    global game_words
    chat_id = message.chat.id
    ms_text = message.text

    result = goto_menu(chat_id, ms_text)
    if result == True:
        return

    if Menu.cur_menu != None and ms_text in Menu.cur_menu.buttons:

        if ms_text == "ü§ö":
            c = ["ü§ö", "‚úå Ô∏è", "‚úä"]
            random.shuffle(c)
            if c[0] == "‚úå Ô∏è":
                answer = "–Ø –ø–æ–±–µ–¥–∏–ª, –∞ —Ç—ã –Ω–µ—Ç))"
            elif c[0] == "‚úä":
                answer = "–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª(("
            else:
                answer = "–ù–∏—á—å—è. –¢–µ–±–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ–∑–ª–æ."
            bot.send_message(chat_id, text=f"    {c[0]}\n...{answer}")
            goto_menu(chat_id, "–ò–≥—Ä—ã")
        elif ms_text == "‚úå Ô∏è":
            c = ["ü§ö", "‚úå Ô∏è", "‚úä"]
            random.shuffle(c)
            if c[0] == "‚úä":
                answer = "–Ø –ø–æ–±–µ–¥–∏–ª, –∞ —Ç—ã –Ω–µ—Ç))"
            elif c[0] == "ü§ö":
                answer = "–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª(("
            else:
                answer = "–ù–∏—á—å—è. –¢–µ–±–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ–∑–ª–æ."
            bot.send_message(chat_id, text=f"    {c[0]}\n...{answer}")
            goto_menu(chat_id, "–ò–≥—Ä—ã")
        elif ms_text == "‚úä":
            c = ["ü§ö", "‚úå Ô∏è", "‚úä"]
            random.shuffle(c)
            if c[0] == "ü§ö":
                answer = "–Ø –ø–æ–±–µ–¥–∏–ª, –∞ —Ç—ã –Ω–µ—Ç))"
            elif c[0] == "‚úå Ô∏è":
                answer = "–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª(("
            else:
                answer = "–ù–∏—á—å—è. –¢–µ–±–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ–∑–ª–æ."
            bot.send_message(chat_id, text=f"    {c[0]}\n...{answer}")
            goto_menu(chat_id, "–ò–≥—Ä—ã")

        elif ms_text == "–ö–∞—Ä—Ç—É!" :
            if game21 == None:  # –µ—Å–ª–∏ –º—ã —Å–ª—É—á–∞–π–Ω–æ –ø–æ–ø–∞–ª–∏ –≤ —ç—Ç–æ –º–µ–Ω—é, –∞ –æ–±—ä–µ–∫—Ç–∞ —Å –∏–≥—Ä–æ–π –Ω–µ—Ç
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return

            text_game = game21.get_cards(1)
            bot.send_media_group(chat_id, media=getMediaCards(game21))  # –ø–æ–ª—É—á–∏–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç
            bot.send_message(chat_id, text=text_game)

            if game21.status != None:  # –≤—ã—Ö–æ–¥, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return
        elif ms_text == "–°—Ç–æ–ø!" :
            game21 = None
            goto_menu(chat_id, "–í—ã—Ö–æ–¥")
            return

        elif ms_text == "–¢—è–Ω—É—Ç—å –Ω–æ–≤—É—é!" :
            if game_B_J == None:  # –µ—Å–ª–∏ –º—ã —Å–ª—É—á–∞–π–Ω–æ –ø–æ–ø–∞–ª–∏ –≤ —ç—Ç–æ –º–µ–Ω—é, –∞ –æ–±—ä–µ–∫—Ç–∞ —Å –∏–≥—Ä–æ–π –Ω–µ—Ç
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return
            text_game = game_B_J.get_cards(1)
            bot.send_message(chat_id, text=text_game)

            if game_B_J.status != None:  # –≤—ã—Ö–æ–¥, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return
        elif ms_text == "–ü–∞—Å!" :
            game_B_J = None
            goto_menu(chat_id, "–í—ã—Ö–æ–¥")
            return

        elif ms_text == "–¶–∏—Ç–∞—Ç—É":  # .....................................................
            bot.send_message(chat_id, text=quotes())

        elif ms_text == "–ù–∞—á–∞—Ç—å" and game_words == None:  # .....................................................
            game_words = True
            print("–ù–∞—á–∞–ª–∏")
            # goto_menu(chat_id, "–ó–∞–∫–æ–Ω—á–∏—Ç—å")
        elif ms_text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å":
            game_words = None
            goto_menu(chat_id, "–í—ã—Ö–æ–¥")

        elif ms_text == "–¢—è–Ω":  # .........................................................
            bot.send_message(chat_id, tyan())

        elif ms_text == "–£–≥–∞–¥–∞–π –∫—Ç–æ?":
            get_ManOrNot(chat_id)

        elif ms_text == "–°–≤—è–∑—å":  # ..........................................................
            send_link(chat_id)

        elif ms_text == "–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è":  # .................................................................
            goto_menu(chat_id, "–ü–æ–∫–∞ :3 ")
        elif ms_text == "–í–µ—Ä–Ω—É—Ç—å—Å—è":
            bot.send_message(chat_id, text="C –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º) ")
            goto_menu(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    else:  # ......................................................................................................
        if game_words != None:
            if ms_text[-1].upper() != ("–¨" or "–™" or "–´"):
                a = ms_text[-1].upper()
            else:
                a = ms_text[-2].upper()
            bot.send_message(chat_id, text=WordGame(a))
            goto_menu(chat_id, "–ó–∞–∫–æ–Ω—á–∏—Ç—å")
        else:
            bot.send_message(chat_id, text="–ú–Ω–µ –∂–∞–ª—å, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É: " + ms_text)
            goto_menu(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

# -----------------------------------------------------------------------
def quotes():
    quotes = []
    avtor = []
    req_quo = requests.get("https://citaty.info/random")
    soup = bs4.BeautifulSoup(req_quo.text, "html.parser")
    res = soup.find_all(class_='field-item even last')
    avt = soup.find_all(class_="field-item even")
    for res4 in res:
        quotes.append(res4.getText().strip())
    for avt4 in avt:
        avtor.append(avt4.getText())
    quotes = quotes[0]
    wh = ""
    try:
        for i in range(0, len(avtor)):
            if wh == "":
                wh += avtor[i]
            elif avtor[i] == avtor[i].lower():
                break
            else:
                wh += ", " + avtor[i]
        avtors = "\n\n" + wh
    except IndexError:
        avtors = ''
    quotes = '" '+quotes.replace("\xa0", " ")+' "' + avtors
    return quotes

# ----------------------------------------------------------------------
def WordGame(a):
    TheWorde = ""
    Word_precent = str(urllib.parse.quote(a))  # –ü—Ä–µ–æ–±—Ä UTF-8 –≤ %
    count_page = random.randint(1, 11)
    url = (f"https://slovopoisk.ru/type-1/begin-{Word_precent}?page={count_page}")  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä. —Å –±—É–∫–≤–æ–π
    word_req = requests.get(url)
    soup = bs4.BeautifulSoup(word_req.text, "html.parser")
    print(url)
    strongs = str(((count_page - 1)*100) + random.randint(1, 100)) + "."  # –ü–æ–∑–∏—Ü–∏—è —Å–ª–æ–≤–∞ –Ω–∞ —Å—Ç—Ä.
    print(strongs)
    Words_html = soup.find("span", class_="word-num", string=strongs)
    if Words_html != None:
        Words_html = Words_html.next_sibling  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–æ–≤—É
        if Words_html != None:
            for z in range(1, len(Words_html)):
                if Words_html[z].isalpha(): TheWorde += (Words_html[z])
        else:
            Words_html = Words_html.previous_sibling
            Words_html = Words_html.next_element
            print(Words_html)
    else:
        print(Words_html)
        TheWorde = "–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª, –ø–æ–∫–æ–Ω—á–∏ —Å–æ –º–Ω–æ–π..."
    return TheWorde

# —è - 7 —é-3
# -----------------------------------------------------------------------
def get_ManOrNot(chat_id):
    global bot

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", url="https://vc.ru/dev/58543-thispersondoesnotexist-sayt-generator-realistichnyh-lic")
    markup.add(btn1)

    req = requests.get("https://thispersondoesnotexist.com/image", allow_redirects=True)
    if req.status_code == 200:
        img = BytesIO(req.content)
        bot.send_photo(chat_id, photo=img, reply_markup=markup, caption="–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —Ä–µ–∞–ª–µ–Ω?")

# -----------------------------------------------------------------------
def goto_menu(chat_id, name_menu):
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–Ω—é
    if name_menu == "–í—ã—Ö–æ–¥" and Menu.cur_menu != None and Menu.cur_menu.parent != None:
        target_menu = Menu.getMenu(Menu.cur_menu.parent.name)
    else:
        target_menu = Menu.getMenu(name_menu)

    if target_menu != None:
        bot.send_message(chat_id, text=target_menu.name, reply_markup=target_menu.markup)

        # –ü—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ—Ç –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Å–∞–º–æ–≥–æ –º–µ–Ω—é. –ï—Å–ª–∏ –µ—Å—Ç—å - –≤—ã–ø–æ–ª–Ω–∏–º –Ω—É–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if target_menu.name == "21":
            global game21

            game21 = BotGames.Game21()  # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã
            text_game = game21.get_cards(2)  # –ø—Ä–æ—Å–∏–º 2 –∫–∞—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
            bot.send_media_group(chat_id, media=getMediaCards(game21))  # –ø–æ–ª—É—á–∏–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç
            bot.send_message(chat_id, text=text_game)

        elif target_menu.name == "Black Jack":
            global game_B_J
            game_B_J = B_J.Game_B_J()  # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã
            text_game = game_B_J.get_cards(2)  # –ø—Ä–æ—Å–∏–º 2 –∫–∞—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
            bot.send_message(chat_id, text=text_game)
        return True

    else:
        return False


# -----------------------------------------------------------------------
def tyan():
    req = requests.get("http://randomwaifu.altervista.org/")
    soup = bs4.BeautifulSoup(req.text, "html.parser")
    img = soup.find(class_="center-fit")
    img = "http://randomwaifu.altervista.org/" + img["src"]
    return img


# -----------------------------------------------------------------------
def getMediaCards(game21):
    medias = []
    for url in game21.arr_cards_URL:
        medias.append(types.InputMediaPhoto(url))
    return medias


#  ----------------------------------------------------------------------
def send_link(chat_id):
    global bot
    bot.send_message(chat_id, "–ê–≤—Ç–æ—Ä: –ü–æ–ª—É–Ω–æ–≤—Å–∫–∏–π –ú–∞–∫—Å–∏–º–∏–ª–∏–∞–Ω")
    key1 = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É", url="https://t.me/mBumblebee")
    key1.add(btn1)
    img = open('ddd.png', 'rb')
    bot.send_photo(chat_id, img, reply_markup=key1)

# ----------------------------------------------------------------------

bot.polling(none_stop=True, interval=0)
print()
